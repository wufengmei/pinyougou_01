<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"
             xsi:schemaLocation="http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans.xsd
http://www.springframework.org/schema/security
http://www.springframework.org/schema/security/spring-security.xsd
http://code.alibabatech.com/schema/dubbo
http://code.alibabatech.com/schema/dubbo/dubbo.xsd">

    <!--服务消费者名称-->
    <dubbo:application name="pinyougou-shop-web"/>
    <!--注册中心地址-->
    <dubbo:registry address="zookeeper://192.168.12.168:2181"/>
    <!--扫描使用了阿里注解的那些包-->
    <dubbo:reference id="sellerService" interface="com.pinyougou.sellergoods.service.SellerService"/>

    <!--配置不需要登录就可以访问的资料-->
    <http pattern="/css/**" security="none"/>
    <http pattern="/img/**" security="none"/>
    <http pattern="/js/**" security="none"/>
    <http pattern="/plugins/**" security="none"/>
    <http pattern="/register.html" security="none"/>
    <http pattern="/seller/add.do" security="none"/>
    <http pattern="/shoplogin.html" security="none"/>

    <!--配置需要登录并且特定角色权限才能访问资料-->
    <!--如果设置为false 则可以在access中不使用hasRole等如此表达式-->
    <http use-expressions="false">
        <!--拦截有特定角色的资源；如果有则放行，角色来自自己编写（随便写的）-->
        <intercept-url pattern="/**" access="ROLE_SELLER"/>

        <!--登录信息配置-->
        <form-login login-page="/shoplogin.html" default-target-url="/admin/index.html"
                    authentication-failure-url="/shoplogin.html" always-use-default-target="true"/>

        <!--禁止跨站点伪造访问-->
        <csrf disabled="true"/>

        <!-- 如果使用了 iframe 等框架，希望跳转也是在框架内跳转的话 -->
        <headers>
            <frame-options policy="SAMEORIGIN"/>
        </headers>

        <!--注销登录-->
        <logout/>

    </http>

    <!--自定义认证授权类-->
    <beans:bean id="userDetailService" class="com.pinyougou.shop.service.impl.UserDetailServiceImpl">
        <beans:property name="sellerService" ref="sellerService"/>
    </beans:bean>

    <!--配置认证密码的加密算法-->
    <beans:bean id="bcryptPasswordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>

    <!--配置认证管理器-->
    <authentication-manager>
        <authentication-provider user-service-ref="userDetailService">
            <password-encoder ref="bcryptPasswordEncoder"/>
        </authentication-provider>
    </authentication-manager>

</beans:beans>
